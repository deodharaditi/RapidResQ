/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.ManagementUnit;

import business.EcoSystem;
import business.Enterprise.Enterprise;
import business.JSONUtil.Store;
import business.Network.Network;
import business.Organization.Organization;
import business.Stakeholders.Doctor;
import business.Stakeholders.DoctorDirectory;
import business.Stakeholders.Patient;
import business.Stakeholders.PatientDirectory;
import business.UserAccount.UserAccount;
import javax.swing.JPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author meetb
 */
public class ManagementMainJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    PatientDirectory patientList;
    DoctorDirectory doctorList;
    EcoSystem system;
    Network network;
    Organization organization;
    Enterprise enterprise;
    UserAccount account;

    /**
     * Creates new form ManagementMainJPanel
     */
    public ManagementMainJPanel(JPanel workArea, EcoSystem system, Network network, Enterprise enterprise, Organization organization, UserAccount account) {

        initComponents();  // Initialize components as usual
        this.workArea = workArea;
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.network = network;
        this.system = system;

        populateDoctorTable();
        populatePatientTable();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txtage = new javax.swing.JTextField();
        txtqualification = new javax.swing.JTextField();
        txtbloodGrp = new javax.swing.JTextField();
        btnCreateDoc = new javax.swing.JButton();
        btnCreatePatient = new javax.swing.JButton();
        btnDeleteDoc = new javax.swing.JButton();
        btnDeletePatient = new javax.swing.JButton();
        btnViewDoc = new javax.swing.JButton();
        btnViewPatient = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        txtDocName = new javax.swing.JTextField();
        txtpatientId = new javax.swing.JTextField();
        txtspecialization = new javax.swing.JTextField();
        txtpatientName = new javax.swing.JTextField();
        btnLogout2 = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setLayout(null);
        add(txtage);
        txtage.setBounds(410, 740, 192, 22);
        add(txtqualification);
        txtqualification.setBounds(1290, 740, 192, 22);
        add(txtbloodGrp);
        txtbloodGrp.setBounds(410, 780, 192, 22);

        btnCreateDoc.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCreateDoc.setForeground(new java.awt.Color(0, 0, 102));
        btnCreateDoc.setText("Create Doctor");
        btnCreateDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateDocActionPerformed(evt);
            }
        });
        add(btnCreateDoc);
        btnCreateDoc.setBounds(1060, 530, 183, 72);

        btnCreatePatient.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnCreatePatient.setForeground(new java.awt.Color(0, 0, 102));
        btnCreatePatient.setText("Create Patient");
        btnCreatePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreatePatientActionPerformed(evt);
            }
        });
        add(btnCreatePatient);
        btnCreatePatient.setBounds(190, 500, 171, 72);

        btnDeleteDoc.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDeleteDoc.setForeground(new java.awt.Color(0, 0, 102));
        btnDeleteDoc.setText("Delete");
        btnDeleteDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteDocActionPerformed(evt);
            }
        });
        add(btnDeleteDoc);
        btnDeleteDoc.setBounds(1290, 530, 183, 72);

        btnDeletePatient.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDeletePatient.setForeground(new java.awt.Color(0, 0, 102));
        btnDeletePatient.setText("Delete");
        btnDeletePatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeletePatientActionPerformed(evt);
            }
        });
        add(btnDeletePatient);
        btnDeletePatient.setBounds(410, 500, 171, 72);

        btnViewDoc.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnViewDoc.setForeground(new java.awt.Color(0, 0, 102));
        btnViewDoc.setText("View");
        btnViewDoc.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewDocActionPerformed(evt);
            }
        });
        add(btnViewDoc);
        btnViewDoc.setBounds(1520, 530, 183, 72);

        btnViewPatient.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnViewPatient.setForeground(new java.awt.Color(0, 0, 102));
        btnViewPatient.setText("View");
        btnViewPatient.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnViewPatientActionPerformed(evt);
            }
        });
        add(btnViewPatient);
        btnViewPatient.setBounds(630, 500, 183, 72);

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Reception Work Area");
        add(jLabel1);
        jLabel1.setBounds(655, 6, 440, 48);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null},
                {null, null, null},
                {null, null, null},
                {null, null, null}
            },
            new String [] {
                "Doctor Name", "Specialization", "Qualification"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        add(jScrollPane2);
        jScrollPane2.setBounds(1060, 190, 643, 266);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Patient ID", "Patient Name", "Age", "Blood Group"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1);
        jScrollPane1.setBounds(180, 190, 650, 266);
        add(txtDocName);
        txtDocName.setBounds(1290, 650, 192, 22);
        add(txtpatientId);
        txtpatientId.setBounds(410, 650, 192, 22);
        add(txtspecialization);
        txtspecialization.setBounds(1290, 690, 192, 22);
        add(txtpatientName);
        txtpatientName.setBounds(410, 690, 192, 22);

        btnLogout2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnLogout2.setForeground(new java.awt.Color(0, 0, 102));
        btnLogout2.setText("Log Out");
        btnLogout2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogout2ActionPerformed(evt);
            }
        });
        add(btnLogout2);
        btnLogout2.setBounds(110, 30, 127, 56);

        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/ManagementUnit/final bg.png"))); // NOI18N
        add(jLabel3);
        jLabel3.setBounds(0, 0, 1990, 1150);
    }// </editor-fold>//GEN-END:initComponents

    private void btnCreatePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreatePatientActionPerformed
        CreatePatientJPanel panel = new CreatePatientJPanel(workArea, system, patientList, network);
        workArea.removeAll();
        workArea.add("CreatePatientJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreatePatientActionPerformed

    private void btnCreateDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateDocActionPerformed
        // TODO add your handling code here:
        CreateDoctorJPanel panel = new CreateDoctorJPanel(workArea, system, doctorList, network);
        workArea.removeAll();
        workArea.add("CreateDoctorJPanel", panel);
        CardLayout layout = (CardLayout) workArea.getLayout();
        layout.next(workArea);        // TODO add your handling code here:
    }//GEN-LAST:event_btnCreateDocActionPerformed

    private void btnViewPatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewPatientActionPerformed
        // TODO add your handling code here: // Get the selected row index from the jTable1
        int selectedRowIndex = jTable1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Patient selectedPatient = null;
        
        String patientName = model.getValueAt(selectedRowIndex, 1).toString();
        for(Patient p: system.getPatientDirectory().getPatientList()){
            if(p.getPatientName().equals(patientName)){
                selectedPatient = p;
                System.out.println(selectedPatient);
            }
        }
        
        txtpatientId.setText(String.valueOf(selectedPatient.getPatientId()));
        txtpatientName.setText(selectedPatient.getPatientName());
        txtage.setText(String.valueOf(selectedPatient.getAge()));
        txtbloodGrp.setText(selectedPatient.getBloodGrp());
    }//GEN-LAST:event_btnViewPatientActionPerformed

    private void btnViewDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnViewDocActionPerformed
// Get the selected row index from the jTable2
        int selectedRowIndex = jTable2.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to view.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        Doctor selectedDoctor = null;
        
        String doctorName = model.getValueAt(selectedRowIndex, 0).toString();
        for(Doctor d: system.getDoctorDirectory().getDoctorList()){
            if(d.getDocName().equals(doctorName)){
                selectedDoctor = d;
            }
        }

        txtDocName.setText(selectedDoctor.getDocName());
        txtspecialization.setText(selectedDoctor.getSpecilizationName());
        txtqualification.setText(selectedDoctor.getQualification());
    }//GEN-LAST:event_btnViewDocActionPerformed

    private void btnDeletePatientActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeletePatientActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable1.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        Patient selectedPatient = null;
        
        String patientName = model.getValueAt(selectedRowIndex, 1).toString();
        for(Patient p: system.getPatientDirectory().getPatientList()){
            if(p.getPatientName().equals(patientName)){
                selectedPatient = p;
            }
        }

        system.getPatientDirectory().deletePatient(selectedPatient);
        Store.save(system);

        JOptionPane.showMessageDialog(this, "Patient deleted.");

        populatePatientTable();
    }//GEN-LAST:event_btnDeletePatientActionPerformed

    private void btnDeleteDocActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteDocActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = jTable2.getSelectedRow();

        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row to delete.");
            return;
        }

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        Doctor selectedDoctor = null;
        
        String doctorName = model.getValueAt(selectedRowIndex, 0).toString();
        for(Doctor d: system.getDoctorDirectory().getDoctorList()){
            if(d.getDocName().equals(doctorName)){
                selectedDoctor = d;
            }
        }

        system.getDoctorDirectory().deleteDoctor(selectedDoctor);
        Store.save(system);
        
        JOptionPane.showMessageDialog(this, "Doctor deleted.");

        populateDoctorTable();

    }//GEN-LAST:event_btnDeleteDocActionPerformed

    private void btnLogout2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogout2ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        ((java.awt.CardLayout) workArea.getLayout()).previous(workArea);
    }//GEN-LAST:event_btnLogout2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreateDoc;
    private javax.swing.JButton btnCreatePatient;
    private javax.swing.JButton btnDeleteDoc;
    private javax.swing.JButton btnDeletePatient;
    private javax.swing.JButton btnLogout2;
    private javax.swing.JButton btnViewDoc;
    private javax.swing.JButton btnViewPatient;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTextField txtDocName;
    private javax.swing.JTextField txtage;
    private javax.swing.JTextField txtbloodGrp;
    private javax.swing.JTextField txtpatientId;
    private javax.swing.JTextField txtpatientName;
    private javax.swing.JTextField txtqualification;
    private javax.swing.JTextField txtspecialization;
    // End of variables declaration//GEN-END:variables

    private void populateDoctorTable() {
        ArrayList<Doctor> doctorList = system.getDoctorDirectory().getDoctorList();

        DefaultTableModel model = (DefaultTableModel) jTable2.getModel();
        model.setRowCount(0);

        for (Doctor d : doctorList) {
            Object[] row = new Object[3];
            row[0] = d.getDocName();
            row[1] = d.getSpecilizationName();
            row[2] = d.getQualification();
            model.addRow(row);
        }

    }

    private void populatePatientTable() {
        ArrayList<Patient> patientList = system.getPatientDirectory().getPatientList();

        DefaultTableModel model = (DefaultTableModel) jTable1.getModel();
        model.setRowCount(0);

        for (Patient p : patientList) {
            Object[] row = new Object[4];
            row[0] = p.getPatientId();
            row[1] = p.getPatientName();
            row[2] = p.getAge();
            row[3] = p.getBloodGrp();
            model.addRow(row);
        }
    }
}
