/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package ui.Doctor;

import business.EcoSystem;
import business.Enterprise.Enterprise;
import business.JSONUtil.Store;
import business.Network.Network;
import business.Organization.LabOrg;
import business.Organization.Organization;
import business.Stakeholders.Doctor;
import business.Stakeholders.Patient;
import business.UserAccount.UserAccount;
import business.VitalSigns.VitalSignsHistory;
import business.WorkQueue.LabTestWorkRequest;
import business.WorkQueue.WorkRequest;
import javax.swing.JPanel;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import java.util.ArrayList;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author apara
 */
public class DoctorJPanel extends javax.swing.JPanel {

    private JPanel workArea;
    UserAccount account;
    Organization organization;
    Enterprise enterprise;
    Network network;
    EcoSystem ecoSystem;
    Doctor doctor;
    ArrayList<Patient> thisPatientList;

    /**
     * Creates new form DoctorJPanel
     */
    public DoctorJPanel(JPanel workArea, EcoSystem ecoSystem, Network network, Enterprise enterprise, Organization organization, UserAccount account) {
        initComponents();
        this.account = account;
        this.organization = organization;
        this.enterprise = enterprise;
        this.network = network;
        this.ecoSystem = ecoSystem;
        this.workArea = workArea;
        this.thisPatientList = new ArrayList<>();
        populatePatientTable();

    }

    private void populatePatientTable() {
        ArrayList<Patient> patientList = ecoSystem.getPatientDirectory().getPatientList();
        //System.out.println(patientList);
        ArrayList<Doctor> doctorList = ecoSystem.getDoctorDirectory().getDoctorList();

        Organization org = null;
        for (Organization organization : ecoSystem.getOrganizationDirectory().getOrganizationList()) {
            if (organization instanceof LabOrg) {
                org = organization;
            }
        }
        ArrayList<WorkRequest> allLabReq = org.getWorkQueue().getWorkRequestList();

        for (Doctor d : doctorList) {
            if (d.getUsername().equals(this.account.getUsername())) {
                this.doctor = d;
            }
        }

        DefaultTableModel model = (DefaultTableModel) tblDoc.getModel();
        model.setRowCount(0);

        for (Patient p : patientList) {
            String message = "";
            String feedback = "";
            if (p.getDoctor().equals(this.doctor.getDocName())) {
                for (WorkRequest wr : allLabReq) {
                    LabTestWorkRequest lwr = (LabTestWorkRequest) wr;
                    if (lwr.getPatient().getPatientName().equals(p.getPatientName())) {
                        message = lwr.getMessage();
                        feedback = lwr.getLabTestAdminFeedback();
                    }
                }
                this.thisPatientList.add(p);
                Object[] row = new Object[5];
                row[0] = p.getPatientName();
                row[1] = p.getAge();
                row[2] = p.getGender();
                row[3] = message;
                row[4] = feedback;
                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnPrescription = new javax.swing.JButton();
        btnReqLabTest = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblDoc = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        respRate = new javax.swing.JTextField();
        txtHeartRate = new javax.swing.JTextField();
        txtWeight = new javax.swing.JTextField();
        bloodPressure = new javax.swing.JTextField();
        btnSubmit = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(0, 0, 0));
        setLayout(null);

        btnPrescription.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnPrescription.setForeground(new java.awt.Color(0, 0, 102));
        btnPrescription.setText("Presciption");
        btnPrescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrescriptionActionPerformed(evt);
            }
        });
        add(btnPrescription);
        btnPrescription.setBounds(1210, 400, 108, 27);

        btnReqLabTest.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnReqLabTest.setForeground(new java.awt.Color(0, 0, 102));
        btnReqLabTest.setText("Request Lab Test");
        btnReqLabTest.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReqLabTestActionPerformed(evt);
            }
        });
        add(btnReqLabTest);
        btnReqLabTest.setBounds(520, 400, 150, 27);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Doctor Work Area");
        add(jLabel1);
        jLabel1.setBounds(790, 50, 390, 48);

        tblDoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Patient Name", "Age", "Gender", "Message", "Feedback"
            }
        ));
        jScrollPane1.setViewportView(tblDoc);

        add(jScrollPane1);
        jScrollPane1.setBounds(470, 130, 890, 256);

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Respiratory Rate:");
        add(jLabel2);
        jLabel2.setBounds(670, 530, 147, 25);

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("Weight:");
        add(jLabel3);
        jLabel3.setBounds(750, 580, 67, 25);

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Heart Rate:");
        add(jLabel4);
        jLabel4.setBounds(720, 640, 97, 25);

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Blood Pressure:");
        add(jLabel5);
        jLabel5.setBounds(690, 690, 132, 25);

        respRate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                respRateActionPerformed(evt);
            }
        });
        add(respRate);
        respRate.setBounds(870, 530, 162, 22);
        add(txtHeartRate);
        txtHeartRate.setBounds(870, 630, 162, 22);
        add(txtWeight);
        txtWeight.setBounds(870, 580, 162, 22);
        add(bloodPressure);
        bloodPressure.setBounds(870, 690, 162, 22);

        btnSubmit.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        btnSubmit.setForeground(new java.awt.Color(0, 0, 102));
        btnSubmit.setText("Submit Vitals");
        btnSubmit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSubmitActionPerformed(evt);
            }
        });
        add(btnSubmit);
        btnSubmit.setBounds(880, 790, 136, 41);

        jButton3.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        jButton3.setForeground(new java.awt.Color(0, 0, 102));
        jButton3.setText("Log Out");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        add(jButton3);
        jButton3.setBounds(10, 20, 90, 27);

        jLabel7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/ui/Doctor/final bg.png"))); // NOI18N
        jLabel7.setText("jLabel7");
        add(jLabel7);
        jLabel7.setBounds(0, 0, 1980, 1100);
    }// </editor-fold>//GEN-END:initComponents

    private void btnReqLabTestActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReqLabTestActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblDoc.getSelectedRow();
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please Select a row from table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }

        String patientName = tblDoc.getModel().getValueAt(selectedRow, 0).toString();
        for (Patient p : this.thisPatientList) {
            if (p.getPatientName().equals(patientName)) {
                RequestDocLabJPanel docLabJPanel = new RequestDocLabJPanel(workArea, ecoSystem, network, enterprise, organization, this.account, this.doctor, p);
                workArea.add("docLabJPanel", docLabJPanel);
                CardLayout layout = (CardLayout) workArea.getLayout();
                layout.next(workArea);
            }
        }
    }//GEN-LAST:event_btnReqLabTestActionPerformed

    private void btnPrescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrescriptionActionPerformed
        int row = tblDoc.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please Select Patient", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String patientName = tblDoc.getModel().getValueAt(row, 0).toString();
            for (Patient p : this.thisPatientList) {
                if (p.getPatientName().equals(patientName)) {
                    PrescriptionJPanel panel = new PrescriptionJPanel(workArea, ecoSystem, network, enterprise, organization, account, p);
                    workArea.add(panel, "PrescriptionJPanel");
                    CardLayout layout = (CardLayout) workArea.getLayout();
                    layout.next(workArea);
                }
            }
        }
    }//GEN-LAST:event_btnPrescriptionActionPerformed

    private void btnSubmitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSubmitActionPerformed
        // TODO add your handling code here:
        int row = tblDoc.getSelectedRow();
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please Select Patient", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            String patientName = tblDoc.getModel().getValueAt(row, 0).toString();
            for (Patient p : this.thisPatientList) {
                if (p.getPatientName().equals(patientName)) {
                    String resRate = respRate.getText();
                    String weight = txtWeight.getText();
                    String bp = bloodPressure.getText();
                    String heartRate = txtHeartRate.getText();

                    VitalSignsHistory vsh = p.getVitalSignsHistory();
                    vsh.addNewVitals(Integer.parseInt(resRate), Integer.parseInt(bp), Integer.parseInt(weight), Integer.parseInt(heartRate));
                    this.ecoSystem.getPatientDirectory().deletePatient(p);
                    p.setVitalSignsHistory(vsh);
                    this.ecoSystem.getPatientDirectory().addPatient(p);
                    Store.save(ecoSystem);
                    JOptionPane.showMessageDialog(null, "Details saved successful.");
                }
            }
        }
    }//GEN-LAST:event_btnSubmitActionPerformed

    private void respRateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_respRateActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_respRateActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        workArea.remove(this);
        ((java.awt.CardLayout) workArea.getLayout()).previous(workArea);
    }//GEN-LAST:event_jButton3ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField bloodPressure;
    private javax.swing.JButton btnPrescription;
    private javax.swing.JButton btnReqLabTest;
    private javax.swing.JButton btnSubmit;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField respRate;
    private javax.swing.JTable tblDoc;
    private javax.swing.JTextField txtHeartRate;
    private javax.swing.JTextField txtWeight;
    // End of variables declaration//GEN-END:variables
}
